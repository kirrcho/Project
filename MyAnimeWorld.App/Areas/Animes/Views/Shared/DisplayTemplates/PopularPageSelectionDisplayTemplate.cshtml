@model Dictionary<int, bool>

<ul class="pagination">
    <li class="page-item">
        <a class="page-link" asp-area="Animes" asp-controller="Anime" asp-action="Popular" asp-route-id="@(this.Model.FirstOrDefault(p => p.Value).Key - 1)" aria-label="Previous">
            <span aria-hidden="true">&laquo;</span>
            <span class="sr-only">Previous</span>
        </a>
    </li>

    @foreach (var page in this.Model.OrderBy(p => p.Key))
    {
        //Active page
        if (page.Value == true)
        {
            <li class="page-item" style="width:40px">
                <a class="page-link" style="color:black" asp-area="Animes" asp-controller="Anime" asp-action="Popular" asp-route-id="@(page.Key)">
                    @(page.Key)
                </a>
            </li>
        }
        else
        {
            <li class="page-item" style="width:40px">
                <a class="page-link" asp-area="Animes" asp-controller="Anime" asp-action="Popular" asp-route-id="@(page.Key)">
                    @(page.Key)
                </a>
            </li>
        }
    }

    <li class="page-item">
        <a class="page-link" asp-area="Animes" asp-controller="Anime" asp-action="Popular" asp-route-id="@(this.Model.FirstOrDefault(p => p.Value).Key + 1)" aria-label="Next">
            <span aria-hidden="true">&raquo;</span>
            <span class="sr-only">Next</span>
        </a>
    </li>
</ul>